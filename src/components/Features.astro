---
const javascriptSkills = ["TypeScript","React","NextJs","Express","NestJs","Drizzle"];
const rustSkills = ["Axum","Actix","Clap","Diesel"];
---

<section class="body-font">
    <div
        class="container flex flex-col justify-between px-2 pb-20 md:py-24 mx-auto"
    >
            <h1
                class="text-center pb-3 text-transparent bg-gradient-to-tr from-slate-400 to-slate-700 bg-clip-text title-font sm:text-4xl text-3xl mb-4 font-medium"
            >
                Programming Skills
            </h1>
        <div
            class="collapse collapse-plus border border-base-300 bg-base-100 rounded-box"
        >
            <input type="checkbox" />
            <div class="collapse-title text-xl font-medium">
                <div class="py-2 text-xl flex">
                    <p class="text-yellow-500">Javascript</p>
                </div>
            </div>
            <div class="collapse-content">
                <div class="bg-zinc-900 rounded-lg flex justify-evenly items-center">
                    {javascriptSkills.map((skill) => (
                    <p class="font-light text-gray-300 dark:text-gray-400">{skill}</p>
                    ))}
                </div>
                <p class="py-3">
                    My confidence in JavaScript extends to TypeScript, React, TSX, Next.js, and their seamless integration into the backend with Express and database systems. This proficiency allows me to build end-to-end solutions efficiently, enabling me to create dynamic, interactive web applications with ease.
                </p>
            </div>
        </div>
        <div
            class="collapse collapse-plus border border-base-300 bg-base-100 rounded-box"
        >
            <input type="checkbox" />
            <div class="collapse-title text-xl font-medium">
                <p class="py-2 text-xl text-orange-600">Rust</p>
            </div>
            <div class="collapse-content">
                <div class="bg-zinc-900 rounded-lg flex justify-evenly items-center">
                    {rustSkills.map((skill) => (
                    <p class="font-light text-gray-300 dark:text-gray-400">{skill}</p>
                    ))}
                </div>
                <p class="py-3">
                    I've gained a good understanding of the borrow checker,
                    Results, Enums, and traits. The borrow checker has been a
                    challenging but essential aspect to understand for safe and
                    efficient code. I appreciate how Results and Enums make code
                    more readable, and traits help create reusable code. I'm
                    excited to keep building my knowledge and skills as a Rust
                    developer with this strong foundation.
                </p>
            </div>
        </div>
    </div>
</section>

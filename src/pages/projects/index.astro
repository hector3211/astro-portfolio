---
import Layout from "../../layouts/Layout.astro";
---

<Layout title="welcome to astro projects">
    <div class="container mx-auto">
        <h1
            class="py-5 lg:py-7 pb-5 text-3xl lg:text-4xl text-center font-bold underline underline-offset-4"
        >
            Deployed Apps
        </h1>
        <div class="flex flex-col justify-evenly items-center md:flex-row">
            <div
                class="card card-compact border border-gray-500 w-80 lg:w-96 bg-base-100 shadow-xl"
            >
                <figure>
                    <img
                        class="object-fill h-44"
                        src="/rustflix.png"
                        alt="rustflix"
                    />
                </figure>
                <div class="card-body">
                    <h2 class="card-title">RustFlix</h2>
                    <p>If a dog chews shoes whose shoes does he choose?</p>
                    <div class="card-actions justify-end">
                        <button class="btn btn-primary">
                            <a
                                href="https://rust-fullstack.vercel.app/"
                                target="_blank">Visite</a
                            >
                        </button>
                    </div>
                </div>
            </div>
            <div
                class="mt-5 md:mt-0 card card-compact border border-gray-500 w-80 lg:w-96 bg-base-100 shadow-xl"
            >
                <figure>
                    <img
                        class="object-fill h-44"
                        src="/travel.png"
                        alt="travel"
                    />
                </figure>
                <div class="card-body">
                    <h2 class="card-title">Travel</h2>
                    <p>If a dog chews shoes whose shoes does he choose?</p>
                    <div class="card-actions justify-end">
                        <button class="btn btn-primary">
                            <a
                                href="https://travel-hector3211.vercel.app/"
                                target="_blank">Visite</a
                            >
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <h1
            class="py-5 lg:py-7 mt-5 text-3xl lg:text-4xl text-center font-bold underline underline-offset-4"
        >
            Undeployed Apps
        </h1>

        <div
            class="container flex flex-col justify-between px-5 mx-auto text-2xl"
        >
            <div
                class="collapse collapse-plus border border-base-300 bg-base-100 rounded-box"
            >
                <input type="checkbox" />
                <div class="collapse-title text-xl font-medium">
                    <h2 class="text-xl">Rust Axum/Diesel Api</h2>
                </div>
                <div class="collapse-content flex flex-col items-center">
                    <p class="text-lg">
                        This Rust Axum API project utilizes Diesel queries to
                        make changes and fetch data from a database containing
                        tables for users and todos. The queries are executed
                        within a Tokio spawn block async function, allowing for
                        concurrent execution and efficient I/O operations. This
                        allows for increased performance and scalability when
                        handling large numbers of requests and updates to the
                        database.
                    </p>
                    <button class="btn btn-primary w-full">
                        <a>Visite</a>
                    </button>
                </div>
            </div>
        </div>

        <div
            class="container flex flex-col justify-between px-5 mx-auto text-2xl"
        >
            <div
                class="collapse collapse-plus border border-base-300 bg-base-100 rounded-box"
            >
                <input type="checkbox" />
                <div class="collapse-title text-xl font-medium">
                    <h2 class="text-xl">RustFlix Actix/Diesel Api</h2>
                </div>
                <div class="collapse-content flex flex-col items-center">
                    <p class="text-lg">
                        This Rust Actix API project uses Diesel queries to
                        perform CRUD operations on a database containing movie
                        data. The queries are executed within Actix web blocks,
                        which provide a convenient and ergonomic way to work
                        with Diesel's async API. This enables efficient and
                        non-blocking I/O operations, making it possible to
                        handle a large number of requests and updates to the
                        database.
                    </p>
                    <button class="btn btn-primary w-full">
                        <a>Visite</a>
                    </button>
                </div>
            </div>
        </div>

        <div
            class="container flex flex-col justify-between px-5 mx-auto text-2xl"
        >
            <div
                class="collapse collapse-plus border border-base-300 bg-base-100 rounded-box"
            >
                <input type="checkbox" />
                <div class="collapse-title font-medium">
                    <h2 class="text-xl">Rust TypeTester</h2>
                </div>
                <div class="collapse-content flex flex-col items-center">
                    <p class="text-lg">
                        This Rust-based project is a keyboard typing test, which
                        allows users to test their typing speed and accuracy.
                        The program prompts the user to type a given set of
                        words or phrases as quickly and accurately as possible,
                        and records the time taken and errors made.This project
                        is designed to be simple and easy to use, making it
                        ideal for individuals who want to improve their typing
                        skills.
                    </p>
                    <button class="btn btn-primary w-full">
                        <a>Visite</a>
                    </button>
                </div>
            </div>
        </div>

        <div
            class="container flex flex-col justify-between px-5 mx-auto text-2xl"
        >
            <div
                class="collapse collapse-plus border border-base-300 bg-base-100 rounded-box"
            >
                <input type="checkbox" />
                <div class="collapse-title font-medium">
                    <h2 class="text-xl">Rust Clap DataLogger</h2>
                </div>
                <div class="collapse-content flex flex-col items-center">
                    <p class="text-lg">
                        This Rust-based project uses the Clap library for
                        command-line argument parsing and Diesel for data
                        management, specifically data logging. The program is
                        designed to take in information about a job, including
                        its name, invoice number, salesperson, and payment
                        status, through command-line arguments. The information
                        is then saved to a database using Diesel's ORM
                        functionality. This project is ideal for small
                        businesses or individuals who need a simple and
                        efficient way to track job information and payment
                        status
                    </p>
                    <button class="btn btn-primary w-full">
                        <a>Visite</a>
                    </button>
                </div>
            </div>
        </div>
    </div>
</Layout>
